// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RSAllies.Users.Data;

#nullable disable

namespace RSAllies.Users.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20240627204854_PassowordhashMigration")]
    partial class PassowordhashMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RSAllies.Users.Entities.Administrator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasIndex("FirstName", "LastName")
                        .IsUnique();

                    b.ToTable("Administrators", "Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.EducationLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EducationLevels", "Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4498e65f-858d-4d46-97fe-6f300f28bc06"),
                            Level = "Uneducated"
                        },
                        new
                        {
                            Id = new Guid("baa5ac49-6f97-4f7c-b3c2-3ad51eb8bdd7"),
                            Level = "Class 7"
                        },
                        new
                        {
                            Id = new Guid("6adc391a-9b4f-4198-a9fe-54ee3a741eb7"),
                            Level = "Form 2"
                        },
                        new
                        {
                            Id = new Guid("cb2921a4-2326-4daa-9eba-256cc5e641a2"),
                            Level = "Form 4"
                        },
                        new
                        {
                            Id = new Guid("86487217-b220-4d29-9bd8-0620ddf37020"),
                            Level = "Form 6"
                        },
                        new
                        {
                            Id = new Guid("e3114ece-b441-4e9b-9484-0e7ed4379d60"),
                            Level = "Diploma"
                        },
                        new
                        {
                            Id = new Guid("e1244756-8c90-4381-bf11-47ea05e2a7ce"),
                            Level = "Bachelor's Degree"
                        },
                        new
                        {
                            Id = new Guid("659521e7-1f9f-4ad3-9550-d5560e909532"),
                            Level = "Master's Degree"
                        },
                        new
                        {
                            Id = new Guid("1a7bdb3d-d3f5-432c-abed-45a492c891d7"),
                            Level = "PHD"
                        });
                });

            modelBuilder.Entity("RSAllies.Users.Entities.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GenderType")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("Genders", "Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ffe4903-e9ff-4c79-bf10-77ad28e1daf5"),
                            GenderType = "Male"
                        },
                        new
                        {
                            Id = new Guid("28e226d8-b29a-40a4-a747-673151cc15ba"),
                            GenderType = "Female"
                        });
                });

            modelBuilder.Entity("RSAllies.Users.Entities.LicenseClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("LicenseClasses", "Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4f3ae0f-cab9-4ec5-8399-8eb08b6c1e8d"),
                            Class = "Class A"
                        },
                        new
                        {
                            Id = new Guid("0d4bed47-c43b-43a8-b444-413de1d8d136"),
                            Class = "Class A1"
                        },
                        new
                        {
                            Id = new Guid("2720e72a-021e-4fb1-8c42-153feec5db3a"),
                            Class = "Class A2"
                        },
                        new
                        {
                            Id = new Guid("3b582206-176c-404c-b14b-c1298a2dc770"),
                            Class = "Class A3"
                        },
                        new
                        {
                            Id = new Guid("84c66aa8-716b-4bd2-a843-11ba8637eb9c"),
                            Class = "Class B"
                        },
                        new
                        {
                            Id = new Guid("4f1341aa-f144-430e-ba70-6d0b639b12d1"),
                            Class = "Class C"
                        },
                        new
                        {
                            Id = new Guid("3286a2c1-e411-4c65-8e80-f373e3fc1438"),
                            Class = "Class C1"
                        },
                        new
                        {
                            Id = new Guid("baaeabf9-cd1e-4056-8171-efe805a66f14"),
                            Class = "Class C2"
                        },
                        new
                        {
                            Id = new Guid("e2740582-1b51-4c3b-9ddc-99026335628f"),
                            Class = "Class C3"
                        },
                        new
                        {
                            Id = new Guid("fbc1fe74-a68d-4a7d-875c-ec729224be2d"),
                            Class = "Class D"
                        },
                        new
                        {
                            Id = new Guid("7a2dc259-e09c-4111-9a52-b38919e334d4"),
                            Class = "Class E"
                        },
                        new
                        {
                            Id = new Guid("f7a4a004-eef9-4584-a5de-10e82930d7ec"),
                            Class = "Class F"
                        },
                        new
                        {
                            Id = new Guid("792d07ac-b447-483e-bf43-a9cc71bdb4ca"),
                            Class = "Class G"
                        });
                });

            modelBuilder.Entity("RSAllies.Users.Entities.Nationality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities", "Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Roles", "Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("480f7b01-34e7-4223-8377-9214f25fbe77"),
                            Name = "SuperUser"
                        },
                        new
                        {
                            Id = new Guid("420723a1-244b-43c1-b030-1601d6d6b329"),
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("d3f54dc7-6000-40fd-95b4-b1e13553379f"),
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("RSAllies.Users.Entities.SupportCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaseNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SupportCases", "Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EducationLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsForeigner")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("LicenseClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("NationalityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevelId");

                    b.HasIndex("GenderId");

                    b.HasIndex("Identification")
                        .IsUnique();

                    b.HasIndex("LicenseClassId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("FirstName", "MiddleName", "LastName")
                        .IsUnique();

                    b.ToTable("Users", "Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accounts", "Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.Administrator", b =>
                {
                    b.HasOne("RSAllies.Users.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.SupportCase", b =>
                {
                    b.HasOne("RSAllies.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.User", b =>
                {
                    b.HasOne("RSAllies.Users.Entities.EducationLevel", "EducationLevel")
                        .WithMany("Users")
                        .HasForeignKey("EducationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RSAllies.Users.Entities.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RSAllies.Users.Entities.LicenseClass", "LicenseClass")
                        .WithMany("Users")
                        .HasForeignKey("LicenseClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RSAllies.Users.Entities.Nationality", null)
                        .WithMany("Users")
                        .HasForeignKey("NationalityId");

                    b.Navigation("EducationLevel");

                    b.Navigation("Gender");

                    b.Navigation("LicenseClass");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.UserAccount", b =>
                {
                    b.HasOne("RSAllies.Users.Entities.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("RSAllies.Users.Entities.UserAccount", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.EducationLevel", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.LicenseClass", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.Nationality", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RSAllies.Users.Entities.User", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
